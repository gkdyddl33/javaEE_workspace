
	javaEE 같은 대형 어플리케이션 개발에서는 재 사용성을 고려해야 함..
	-> 점점 더 업그레이드를 하면서 "게시판"을 구현하고 있다.

	Connection Pooling : 접속이 없더라도, 미리 접속객체를 다수 확보해 놓는 기술
			   web과 같이 stateless 기반이다.. 통신에서는 요청/응답에 의해 네트워크가
			   유지될 수 없기 때문에 다수의 사용자가 요청을 하면, 요청 수 만큼
			   접속/ 끊음이 계속 발생하게 된다.

	JNDI(Java Naming Directory Interface) : 자바 코드 안에 설정 정보를 두지 말자!
					 유지보수성을 높이려면 외부의 설정 파일에 둬서
					 관리하자 즉, 설정파일로 유지보수하자.
					 자바코드에서 설정 파일을 찾을 수 있는 이름이 필요함.

	SingleTon : GOF(4명의 개발자에 대한 애칭)에 명명됨..
		   전 세계 개발자들의 공통된 개발규칙, 패턴에 이름을 부여함으로써,
		   협업 시 명칭이 통일 됨..

--------------------------------------------------------------------------------------------------

	Mybatis?	SQL Mapper
		개발자가 쿼리문에 집중할 수 있도록 도와주는 퍼시스턴스영역의 프레임웍입니다.
		SQL 문과 자바 객체간의 매핑을 자동으로 해준다!

	SqlSession 이 쿼리문을 수행하는데, 이 객체를 얻기 위해서는 sqlSessionFactory

--------------------------------------------------------------------------------------------------

	jsp의 내장객체 중 session 객체
  
	php, asp : 소,중 규모 적합
	jsp : 대형 어플리케이션

	★ 결국 jsp는 사실 서블릿이라는 클래스였다...
	ex. 내가 만들어 놓은 메소드나 이런 것들이 
		out.print("<table width=\"100%\" border=\"1px\">");
		out.print("<tr>");
		out.print("<td>No</td>");
		out.print("<td>이미지</td>");
		out.print("<td>제목</td>");
		out.print("<td>작성자</td>");
		out.print("<td>등록일</td>");		
		out.print("<td>조회수</td>");		
		out.print("</tr>");
		out.print("</table>");
	--> 이렇게 만들어놓아진것이다. 원래 예전에는 서블릿 뿐이였다. 사용을 서블릿 방식으로 하였고,
	     내장객체를 만들어 놓아서 지금 시대처럼 사용할 수 있게 만들어 놓은 것이다..

	--> 오늘은 서블릿을 파야 한다!!

--------------------------------------------------------------------------------------------------

1. JVM 메모리 구조
2. 쓰레드 생명주기
3. 서블릿 생명주기 : 서블릿은 언제 태어나서? 어떻게 일하고? 언제 죽나?
