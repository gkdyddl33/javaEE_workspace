
개발방법 1) 막 개발..디자인과 로직과 컨트롤러가 합쳐진 상태로 하나의 파일에 모두 몰아넣었을 때

	장점 : 개발시간이 단축
	단점 : 재사용이 불가능하다.


개발방법 2) 로직을 분리시켜 개발하는 방법(javaEE 에서 Model1 방식)

	예) jsp에서 DAO 를 분리시켜 개발했었다.

	장점 : 공통로직을 여러 플랫폼에서 재 사용할 수 있다.
	단점 : 여전히 JSP가 컨트롤러로서의 역할을 부담하고 있음..
	         따라서 JSP를 교체시 컨트롤러도 함께 교체되어 버린다.

	결론 : 완벽한 분리가 되지 않음..

개발방법 3) 디자인, 로직 , 컨트롤러를 완벽히 구분하는 방법

	V	M	C	를 완벽히 구분하는 것 = MVC패턴을 의미

	javaEE에서 MVC 패턴을 적용한 개발방법을 Model2..
	M - 공통로직, 데이터표현한 객체 : 일반 클래스로
	V - jsp로 구현(디자인)

	C - 서블릿으로 구현(기존의 model1에서 jsp가 하던 역할을 수행해야 하므로)
	      즉, 웹서버에서 실행될 수 있는 능력이 있는 클래스 이기 떄문에..

고객센터  1. 모든 요청을 받는다.
	2. 클라이언트 업무를 분배 - 요청을 분석 - 알맞는 컨트롤러에게 요청을 전달
	3. 알맞는 로직 객체에게 일 시킨다.
	4. 결과가 있을 때는 그 결과를 저장(httpsession)

--------------------------------------------------------------------------------

json 데이터형식이 조건문의 대용이 될 수 있다.

{
	"name":"scott",
	"age":23
}

<person>
	<name>scott</name>
	<age>23</age>
</person>